// <auto-generated />
using System;
using LiveDWAPI.Infrastructure.Cs;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LiveDWAPI.Infrastructure.Migrations
{
    [DbContext(typeof(CsContext))]
    partial class CsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LiveDWAPI.Domain.Cs.DimAgeGroup", b =>
                {
                    b.Property<string>("AgeGroup")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView("vAgeGroup", (string)null);
                });

            modelBuilder.Entity("LiveDWAPI.Domain.Cs.DimAgency", b =>
                {
                    b.Property<string>("Agency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartnerName")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView("vAgencyPartner", (string)null);
                });

            modelBuilder.Entity("LiveDWAPI.Domain.Cs.DimIndicator", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Indicator");

                    b.ToTable((string)null);

                    b.ToView("vIndicator", (string)null);
                });

            modelBuilder.Entity("LiveDWAPI.Domain.Cs.DimRegion", b =>
                {
                    b.Property<string>("County")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacilityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubCounty")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView("vRegionFacility", (string)null);
                });

            modelBuilder.Entity("LiveDWAPI.Domain.Cs.DimSex", b =>
                {
                    b.Property<string>("Sex")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView("vSex", (string)null);
                });

            modelBuilder.Entity("LiveDWAPI.Domain.Cs.FactRealtimeIndicator", b =>
                {
                    b.Property<string>("AgeGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Agency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("AssessmentPeriod")
                        .HasColumnType("datetime2");

                    b.Property<string>("County")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Denominator")
                        .HasColumnType("int");

                    b.Property<string>("FacilityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Indicator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Latitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MFLCode")
                        .HasColumnType("int");

                    b.Property<int?>("Numerator")
                        .HasColumnType("int");

                    b.Property<string>("PartnerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubCounty")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView("CSRTCombinedIndicators", (string)null);
                });

            modelBuilder.Entity("LiveDWAPI.Domain.Stats.ReportingHistory", b =>
                {
                    b.Property<DateTime>("Period")
                        .HasColumnType("datetime2");

                    b.Property<int>("CountyCount")
                        .HasColumnType("int");

                    b.Property<int>("FacilityCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PartnerCount")
                        .HasColumnType("int");

                    b.HasKey("Period");

                    b.ToTable("ReportingHistories");
                });
#pragma warning restore 612, 618
        }
    }
}
